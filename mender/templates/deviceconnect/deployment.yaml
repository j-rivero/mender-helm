{{- if .Values.deviceconnect.enabled }}
{{- $merged := merge (deepCopy .Values.deviceconnect) (deepCopy (default (dict) .Values.default)) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mender.fullname" . }}-deviceconnect
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "mender.labels" . | nindent 4 }}
    app.kubernetes.io/name: {{ include "mender.fullname" . }}-deviceconnect
    app.kubernetes.io/component: deviceconnect
spec:
  {{- if not (or .Values.deviceconnect.hpa .Values.default.hpa) }}
  replicas: {{ .Values.deviceconnect.replicas }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mender.fullname" . }}-deviceconnect

  # if deployment is not completed within 10 min, consider it failed,
  # as result deployment Reason=ProgressDeadlineExceeded
  # needs to be big enough to rollout to complete
  progressDeadlineSeconds: 600

  # Rollout upgrade one by one
  # In this case we warranty there are always instances online.
  # In case any issues, they will be detected early and deployment be stopped.
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1

  template:
    metadata:
      {{- with .Values.deviceconnect.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "mender.fullname" . }}-deviceconnect
        {{- include "mender.labels" . | nindent 8 }}
        app.kubernetes.io/component: deviceconnect
    spec:
      {{- with $merged.affinity }}
      affinity: {{ tpl (toYaml .) $ | nindent 8 }}
      {{- end }}
      {{- with $merged.tolerations }}
      tolerations: {{ tpl (toYaml .) $ | nindent 8 }}
      {{- end }}
{{- if .Values.deviceconnect.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.deviceconnect.podSecurityContext "enabled" | toYaml | nindent 8 }}
{{- end }}

      containers:
      - name: deviceconnect
        image: {{ .Values.deviceconnect.image.registry }}/{{ .Values.deviceconnect.image.repository }}:{{ .Values.deviceconnect.image.tag | default .Values.global.image.tag }}
        imagePullPolicy: {{ .Values.deviceconnect.image.imagePullPolicy }}
{{- if .Values.deviceconnect.containerSecurityContext.enabled }}
        securityContext: {{- omit .Values.deviceconnect.containerSecurityContext "enabled" | toYaml | nindent 10 }}
{{- end }}
        resources:
{{ toYaml .Values.deviceconnect.resources | indent 10 }}

{{- if .Values.deviceconnect.automigrate }}
        args: ["server", "--automigrate"]
{{- else }}
        args: ["server"]
{{- end }}

        # Readiness/liveness probes
        readinessProbe:
          httpGet:
            path: /api/internal/v1/deviceconnect/health
            port: 8080
          periodSeconds: 15
        livenessProbe:
          httpGet:
            path: /api/internal/v1/deviceconnect/alive
            port: 8080
          periodSeconds: 5
        startupProbe:
          httpGet:
            path: /api/internal/v1/deviceconnect/alive
            port: 8080
          failureThreshold: 36
          periodSeconds: 5

        env:
        # NATS uri
{{- if not .Values.global.nats.existingSecret }}
        - name: DEVICECONNECT_NATS_URI
          value: {{ template "nats_uri" . }}
{{- end }}
        # Enable audit logging
{{- if and .Values.auditlogs.enabled .Values.global.enterprise }}
        - name: DEVICECONNECT_ENABLE_AUDIT
          value: "true"
{{- end }}

        # Workflows orchestrator address
        - name: DEVICECONNECT_WORKFLOWS_URL
          value: http://mender-workflows-server:8080/

        - name: DEVICECONNECT_WS_ALLOWED_ORIGINS
          value: >-
            {{ with (urlParse .Values.global.url) -}}
            {{.hostname}} https://{{.hostname}} wss://{{.hostname}}
            {{- end }}

        # Supported configuration settings: https://github.com/mendersoftware/deviceconnect/blob/master/config.yaml
        # Set in order, last value for the key will be used in case duplications.
        envFrom:
        - prefix: DEVICECONNECT_
          secretRef:
            name: {{ .Values.global.mongodb.existingSecret | default "mongodb-common" }}
{{- if .Values.global.nats.existingSecret }}
        - prefix: DEVICECONNECT_
          secretRef:
            name: {{ .Values.global.nats.existingSecret }}
{{- end -}}

{{- if .Values.global.image.username }}
      imagePullSecrets:
      - name: docker-registry
{{- else }}
{{- $ips := coalesce .Values.deviceconnect.imagePullSecrets .Values.default.imagePullSecrets  }}
{{- if $ips }}
      imagePullSecrets:
{{ toYaml $ips | indent 6 }}
{{- end }}
{{- end }}

{{- $pcn := coalesce .Values.deviceconnect.priorityClassName .Values.global.priorityClassName -}}
{{- if $pcn }}
      priorityClassName: {{ $pcn }}
{{- end -}}

{{- with .Values.deviceconnect.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
{{- end }}
{{- end }}
